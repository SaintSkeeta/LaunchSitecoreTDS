----item----
version: 1
id: {31ADDF4F-F2AA-436A-A459-A3E1A7808471}
database: master
path: /sitecore/content/Home/About-Launch-Sitecore/Our-Strategy/Building-a-large-multinational-multilingual-site
parent: {15D0FCF2-7C81-4218-A5A0-7605084D1CBC}
name: Building-a-large-multinational-multilingual-site
master: {00000000-0000-0000-0000-000000000000}
template: {D9019E30-F954-46CC-AA70-3E928C40B5D0}
templatekey: Article

----field----
field: {B0A67B2A-8B07-4E0B-8809-69F751709806}
name: __Tracking
key: __tracking
content-length: 602

<tracking>
  <profile id="{62A90F30-9BAB-425B-8A6D-4AE5A28371D6}" name="Job Function" presets="content owner|50||developer|50||">
    <key name="Analytics" value="0.5" />
    <key name="Copywriting" value="3.5" />
    <key name="Personalization and Testing" value="2.5" />
    <key name="Technology" value="2.5" />
    <key name="Workflow and Publishing" value="1" />
  </profile>
  <profile id="{478859DC-EBE0-40A7-BD24-75D588FD3E09}" name="Information Type" presets="high level|100||">
    <key name="Detailed" value="0" />
    <key name="High Level" value="1" />
  </profile>
</tracking>
----field----
field: {1172F251-DAD4-4EFB-A329-0C63500E4F1E}
name: __Masters
key: __masters
content-length: 38

{1B6A3702-5694-4FC4-8366-989ECDCD7F1B}
----field----
field: {A4F985D9-98B3-4B52-AAAF-4344F6E747C6}
name: __Workflow
key: __workflow
content-length: 38

{E3FBD307-EC4A-4377-BFEB-F732CD5CAF5A}
----version----
language: en
version: 1
revision: 90d1a458-20dd-4ee5-9501-68eea4eed01d

----field----
field: {234542DC-C610-4CA8-BAA6-2592A8BCB1D7}
name: Title
key: title
content-length: 51

Building a large, multi-national, multilingual site
----field----
field: {00E1D306-96BD-4B32-85B4-CD63C53CC6C1}
name: Abstract
key: abstract
content-length: 318

<p>Sitecore makes handling multilingual content easier than ever. There are actually a few approaches for dealing with multilingual sites, depending on the complexity of the use case. We'll look at potential language approaches; from simple translation, all the way up to large, multilingual, multi-regional sites.</p>
----field----
field: {5A5684BB-8B54-44F6-ABCC-2BADA05ADA5D}
name: Body
key: body
content-length: 7298

<p>Sitecore has strong multilingual capabilities right out of the box. As per <a href="http://www.sitecore.net/Community/Best-Practice-Blogs/Scott-Powell/Posts/2010/10/Managing-a-Multilanguage-Site-with-Sitecore-is-Easy.aspx" target="_blank">Scott Powell's blog post</a>, here are the main features of Sitecore around language:</p>
<ol>
    <li>A site can be managed in any number of cultures (for example, US English). </li>
    <li>Every field on a template can be marked as unique to a specific language or shared across all languages. For example, a company logo can be common to all languages and on the same item a different field can be unique in any language. </li>
    <li>Each language has its own version history. </li>
    <li>Items can be pushed through workflow to incorporate the translation process. </li>
    <li>When implemented properly, a site will not require software changes to support new languages. </li>
</ol>
<p>At the simplest level, this means that you can easily set an information architecture to manage multilingual content easily in the same content tree. To Scott's previous top 5 features, I'll add another:</p>
<ol>
    <li>URL structure can use the Display Name when creating the URLs. This means that although your content may exist at the same location in the tree (sitecore/content/Home/Products) the URL will actually be domain.com/products and domain.com/produits. Seth Gottlieb of Sitecore Partner Lionbridge has an excellent blog post on <a href="http://blog.lionbridge.com/marketing/2012/01/31/url-management-for-a-global-business/" target="_blank">URL strategies for multilingual content</a>.</li>
</ol>
<p>As you likely know, the way Sitecore manages language versions is fairly unique, in that a language instance of an item is referenced in the exact same location in the content tree. This has a number of advantages, not the least of which is that your code doesn't have to be a mess of "if-statements" for handling newly created language instances. The language context is (generally speaking) automatically passed to your code at runtime, and the correct language information pulled from the appropriate fields. This functionality is all fine and good and works great if you have a simple site with only a few languages (i.e. English, French, Spanish, Chinese, etc.) - however what if you want to get more specific - down into actual regions, where a regional marketer can tweak their text to suit their region specifically? Then cloning is your new best friend.</p>
<p>For example, take a very large German software company where one of the requirements is that their regional sites not only reflect the languages, but also had regional variations in text and even in products. An example use case was with the language of German, and the region of Switzerland. Their translation process was such that most marketing and web content originated in the US and was translated to a German "generic" version. After this, the "generic" version went to the regions and was then further regionalized into "German-German", "Austrian-German", "Swiss-German" etc. Additionally even the product offerings were different for a language within a country. The French speaking areas of Switzerland are served offerings particular to agriculture, while the German areas of Switzerland are served offerings particular to industry, banking, etc. </p>
<p>How can this be accomplished in Sitecore?</p>
<p> </p>
<h4>Simple Language Use Case (single content tree)</h4>
<p>If your site is largely going to show the same products, etc. from region to region, than the simple case is likely sufficient.</p>
<p><img width="262" height="356" alt="Simple Language Case" src="~/media/8088E5AB298643FFA7E2E6EA454FDFF2.ashx"> </p>
<p>In this example, you simply have one site root. Different language versions of an asset are stored in the same location in the content tree. One the presentation side, you generally make a component for easily switching the language context, which is then maintained in a cookie.</p>
<p>Advantages:</p>
<ul>
    <li>Simplicity - only one site to maintain, only one item to publish</li>
</ul>
<p>Disadvantages:</p>
<ul>
    <li>Less ability for local offices to make local changes.</li>
</ul>
<p> </p>
<h4>Complex Use Case (Regional Sites with cloned content)</h4>
<p><img width="650" height="581" alt="Complex Scenario" src="~/media/9963C9AF7B8145FBBC0AF76D877D5BE5.ashx?h=581&amp;w=650"></p>
<p>In the example, we have site roots (which can be unique domains, as well) set up as regional sites. </p>
<p>If someone has changed the local instance of some cloned text, and the source document changes, an entry is made in the Sitecore notifications table visually indicating the change and prompting for action. Of course, the question always arises - what if I don't want my regions changing any of the content that is coming from the "source" version? Well then, the answer is simple permissions - simply remove the ability to write for those regional users. Any changes to the source will automatically flow from the cloned item as no user was able to change the text to a local instance of that clone.</p>
<p>Advantages:</p>
<ul>
    <li>Unique domains for each regional site </li>
    <li>Ability to make local changes</li>
</ul>
<p>Disadvantages:</p>
<p> </p>
<h4>Complex Use Case (Regional Sites with cloned side-by-side content)</h4>
<p><img width="649" height="582" alt="Complex Scenario" src="~/media/22C84FF9255347CE9AC19FA5D4251046.ashx?h=582&amp;w=649"> </p>
<p>Advantages:</p>
<ul>
    <li>Regional sites can see the language source side-by-side with their changes. They can then copy/paste and choose what text to take from the clone source. This allows greater freedom for local site managers/editors</li>
</ul>
<p>Disadvantages:</p>
<ul>
    <li>Changes to the clone source do not automatically get pushed down to the local copy. Of course, this may be an advantage, depending on the need, of course.</li>
</ul>
<p>In addition, there are also the Shared Source modules for language fallback and partial language fallback (presentation by our own Alex Shyba here: <a href="http://mediacontent.sitecore.net/Support/LanguageFallbackSolution/" target="_blank">http://mediacontent.sitecore.net/Support/LanguageFallbackSolution/</a> ).</p>
<p> In short, like pretty much anything in Sitecore - there are a number of ways to architect a project, depending on the business requirement. As a developer implementing a multilingual, multi-regional solution, there are a lot of architectural building blocks at your disposal. These include:</p>
<ul>
    <li>Separation of content and presentation </li>
    <li>In-line languages </li>
    <li>Cloning and the ability to make changes local to a clone
    </li>
    <li>Easily managing language versions at the same content tree location </li>
    <li>Easily determining programmatically if a language version exists </li>
    <li>Language fallback and/or partial language fallback
    <ul>
        <li>More code examples can also be found in the Presentation Component API Cookbook (Section 5.2) on SDN</li>
    </ul>
    </li>
</ul>
<p>Depending on the business need, you may only take advantage of a few features, all the features - or even mixing and matching strategies as required.</p>
----field----
field: {2B60D8C1-81DB-45A7-B1CB-654CDDA96AE3}
name: Icon
key: icon
content-length: 180

<image mediaid="{A8186F7C-EE24-4894-AE7E-B50AA692169C}" mediapath="/Launch Sitecore/Site Images/Icons/Monochrome/p-s/store-2" src="~/media/a8186f7cee244894ae7eb50aa692169c.ashx" />
----field----
field: {82D725ED-6707-4532-86A6-5444E34332FD}
name: Contributors
key: contributors
content-length: 38

{EF5350C8-21BF-43A3-BCEF-71F29D91AEF0}
----field----
field: {EFC4A071-5574-404A-8206-FB502FCA909B}
name: Prerequisite Articles
key: prerequisite articles
content-length: 38

{5EB8EF2A-66C0-4A9D-915D-F616098E96A5}
----field----
field: {D7229DBA-B952-4D82-A5A0-459C69618D45}
name: Menu Title
key: menu title
content-length: 51

Building a large, multi-national, multilingual site
----field----
field: {B5E02AD9-D56F-4C41-A065-A133DB87BDEB}
name: __Display name
key: __display name
content-length: 48

Building a large multinational multilingual site
----field----
field: {25BED78C-4957-4165-998A-CA1B52F67497}
name: __Created
key: __created
content-length: 15

20111028T080700
----field----
field: {5DD74568-4D4B-44C1-B513-0AF5F4CDA34F}
name: __Created by
key: __created by
content-length: 12

sitecore\mde
----field----
field: {8CDC337E-A112-42FB-BBB4-4143751E123F}
name: __Revision
key: __revision
content-length: 36

90d1a458-20dd-4ee5-9501-68eea4eed01d
----field----
field: {D9CF14B1-FA16-4BA6-9288-E8A174D4D522}
name: __Updated
key: __updated
content-length: 34

20140218T112727:635283196475290953
----field----
field: {BADD9CF9-53E0-4D0C-BCC0-2D784C282F6A}
name: __Updated by
key: __updated by
content-length: 14

sitecore\admin
----field----
field: {A14F1B0C-4384-49EC-8790-28A440F3670C}
name: __Semantics
key: __semantics
content-length: 0


----field----
field: {3E431DE1-525E-47A3-B6B0-1CCBEC3A8C98}
name: __Workflow state
key: __workflow state
content-length: 38

{3E42AE7F-CB44-415C-91D2-B16E9E1ECB5A}
----field----
field: {001DD393-96C5-490B-924A-B0F25CD9EFD8}
name: __Lock
key: __lock
content-length: 5

<r />
